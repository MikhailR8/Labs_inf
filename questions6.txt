1) В многопоточной программе состояние гонки может возникнуть, если общий ресурс используется одновременно несколькими потоками. В таком случае потоки могут пытаться
перезаписать или прочитать одну и ту же переменную одновременно и один поток не будет видеть изменения, внесённые другим потоком, что может привести к бесконечным 
циклам, повреждённым структурам данных и ошибкам в расчётах. Таким образом, возникнет неопределённое поведение, когда результат работы программы может отличаться 
в зависимости от того, какой поток выполнит операции раньше.

2) Состояние deadlock или состояние взаимного тупика возникает, когда несколько потоков одновременно пытаются получить доступ к данным, которые в этот момент захвачены
другими потоками. В таком случае это может привести к полной остановке программы или выполнению ей бесполезной работы. Такое состояние может возникнуть, например,
если один поток захватит общую переменную mutex'ом, а затем не высвободит её до тех пор, пока не получит данные от другого потока, который в свою очередь не может
продолжать работу без данных первого.
